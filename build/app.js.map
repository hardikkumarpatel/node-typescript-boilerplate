{"version":3,"file":"app.js","names":["require","_express","_interopRequireDefault","_morgan","_cors","_helmet","_cookieParser","_nodeHttp","_nodePath","_helpers","_swagger","_config2","_middleware","_Graphql","_routes","e","__esModule","default","asyncGeneratorStep","n","t","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ExpressApp","run","startEngine","AppHelper","signalListening","catch","Log","error","App","express","HttpServer","HTTP","createServer","set","Config","get","IConfigKey","PORT","on","serverErrorListening","info","listening","initialize","listen","initializeMiddleware","setupRequestMiddleware","initializeRoutes","initializeSwaggerDocs","initializeSocket","initializeGraphQLServer","initializeGlobalMiddleware","_this","use","urlencoded","limit","extended","json","morgan","stream","write","http","static","path","join","__dirname","cors","origin","methods","helmet","contentSecurityPolicy","cookies","_this2","req","res","next","_req$entity","entity","_this3","useAppHealthRoute","routes","swaggerApp","SwaggerApp","socket","SocketAppHelper","global","IO","isProduction","graphQL","GraphQLServer","_this4","useAppNotFoundRoute","ApiErrorHelperMiddleware","_default","exports"],"sources":["../src/app.ts"],"sourcesContent":["import \"dotenv/config\";\nimport express, { Request, Response, NextFunction } from \"express\";\nimport morgan from \"morgan\";\nimport cors from \"cors\";\nimport helmet from \"helmet\";\nimport cookies from \"cookie-parser\";\nimport HTTP from \"node:http\";\nimport path from \"node:path\";\nimport { Log, AppHelper, SocketAppHelper } from \"@/helpers\";\nimport { SwaggerApp } from \"@/swagger\";\nimport { Config, IConfigKey } from \"@/config\";\nimport { ApiErrorHelperMiddleware } from \"@/middleware\";\nimport GraphQLServer from \"@/api/graphql/Graphql.server\";\nimport routes from \"@/routes\";\n\nclass ExpressApp {\n  public static App: express.Application;\n  public static HttpServer: HTTP.Server;\n\n  public static async run(): Promise<void> {\n    ExpressApp.startEngine().then(AppHelper.signalListening).catch(Log.error);\n  }\n\n  public static async startEngine(): Promise<express.Application> {\n    ExpressApp.App = express();\n    ExpressApp.HttpServer = HTTP.createServer(ExpressApp.App);\n    ExpressApp.App.set(\"HttpServer\", ExpressApp.HttpServer);\n    ExpressApp.App.set(\"port\", Config.get<number>(IConfigKey.PORT));\n    ExpressApp.HttpServer.on(\"error\", AppHelper.serverErrorListening);\n    ExpressApp.HttpServer.on(\"close\", Log.info);\n    ExpressApp.HttpServer.on(\"listening\", () =>\n      AppHelper.listening(ExpressApp.HttpServer).then(ExpressApp.initialize)\n    );\n    ExpressApp.HttpServer.listen(Config.get<number>(IConfigKey.PORT));\n    return ExpressApp.App;\n  }\n\n  private static async initialize(): Promise<void> {\n    await ExpressApp.initializeMiddleware();\n    await ExpressApp.setupRequestMiddleware();\n    await ExpressApp.initializeRoutes();\n    await ExpressApp.initializeSwaggerDocs();\n    await ExpressApp.initializeSocket();\n    await ExpressApp.initializeGraphQLServer();\n    await ExpressApp.initializeGlobalMiddleware();\n  }\n\n  private static async initializeMiddleware(): Promise<void> {\n    this.App.use(express.urlencoded({ limit: \"6kb\", extended: true }));\n    this.App.use(express.json({ limit: \"6kb\" }));\n    this.App.use(morgan(\"combined\", { stream: { write: Log.http } }));\n    this.App.use(\"/public\", express.static(path.resolve(path.join(__dirname, \"public\"))));\n    this.App.use(\n      cors({\n        origin: \"*\",\n        methods: [\"GET\", \"HEAD\", \"PUT\", \"OPTIONS\", \"PATCH\", \"POST\", \"DELETE\"]\n      })\n    );\n    this.App.use(helmet({ contentSecurityPolicy: false }));\n    this.App.use(cookies());\n  }\n\n  private static async setupRequestMiddleware(): Promise<void> {\n    this.App.use((req: Request, res: Response, next: NextFunction) => {\n      req.entity ??= {};\n      next();\n    });\n  }\n\n  private static async initializeRoutes(): Promise<void> {\n    this.App.use(\"/health\", AppHelper.useAppHealthRoute);\n    this.App.use(routes);\n  }\n\n  private static async initializeSwaggerDocs(): Promise<void> {\n    const swaggerApp = new SwaggerApp(ExpressApp.App);\n    await swaggerApp.initialize().then(Log.info).catch(Log.error);\n  }\n\n  private static async initializeSocket(): Promise<void> {\n    const socket = new SocketAppHelper(ExpressApp.HttpServer);\n    await socket.initialize();\n    (global as any).IO = socket.IO;\n    ExpressApp.App.set(\"IO\", socket.IO);\n  }\n\n  private static async initializeGraphQLServer(): Promise<void> {\n    if (!Config.isProduction()) {\n      const graphQL = new GraphQLServer(ExpressApp.App);\n      await graphQL.initialize(ExpressApp.HttpServer).then(Log.info).catch(Log.error);\n    }\n  }\n\n  private static async initializeGlobalMiddleware(): Promise<void> {\n    this.App.use(\"*\", AppHelper.useAppNotFoundRoute);\n    this.App.use(ApiErrorHelperMiddleware.use);\n  }\n}\n\nexport default ExpressApp;\n"],"mappings":"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","ignoreList":[]}