{"version":3,"file":"app.js","names":["require","_express","_interopRequireDefault","_morgan","_cors","_helmet","_cookieParser","_nodeHttp","_nodePath","_helpers","_swagger","_config2","_middleware","e","__esModule","default","asyncGeneratorStep","n","t","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ExpressApp","run","startEngine","catch","Log","error","AppHelper","processEventsListening","HTTPServer","_this","App","express","HTTP","createServer","set","Config","get","IConfigKey","PORT","on","serverErrorListening","info","serverListening","initialize","listen","initializeMiddleware","initializeRoutes","initializeSwaggerDocs","initializeGlobalMiddleware","_this2","use","useAppHealthRoute","_this3","urlencoded","limit","extended","json","morgan","stream","write","http","static","path","join","__dirname","cors","origin","methods","helmet","contentSecurityPolicy","cookies","isProduction","SwaggerApp","concat","_this4","useAppNotFoundRoute","ApiErrorHelperMiddleware","useGlobalErrorMiddleware","_default","exports"],"sources":["../src/app.ts"],"sourcesContent":["import \"dotenv/config\";\nimport express from \"express\";\nimport morgan from \"morgan\";\nimport cors from \"cors\";\nimport helmet from \"helmet\";\nimport cookies from \"cookie-parser\";\nimport HTTP from \"node:http\";\nimport path from \"node:path\";\nimport { Log, AppHelper } from \"@/helpers\";\nimport { SwaggerApp } from \"@/swagger\";\nimport { Config, IConfigKey } from \"@/config\";\nimport { ApiErrorHelperMiddleware } from \"@/middleware\";\n\nclass ExpressApp {\n  public static App: express.Application;\n  public static HTTPServer: HTTP.Server;\n\n  public static async run(): Promise<void> {\n    ExpressApp.startEngine().catch(Log.error);\n    AppHelper.processEventsListening(ExpressApp.HTTPServer);\n  }\n\n  public static async startEngine(): Promise<void> {\n    ExpressApp.App = express();\n    ExpressApp.HTTPServer = HTTP.createServer(this.App);\n    ExpressApp.App.set(\"port\", Config.get<number>(IConfigKey.PORT));\n    ExpressApp.HTTPServer.on(\"error\", AppHelper.serverErrorListening);\n    ExpressApp.HTTPServer.on(\"close\", Log.info);\n    ExpressApp.HTTPServer.on(\"listening\", () =>\n      AppHelper.serverListening(ExpressApp.HTTPServer).then(ExpressApp.initialize)\n    );\n    ExpressApp.HTTPServer.listen(Config.get<number>(IConfigKey.PORT));\n  }\n\n  private static async initialize(): Promise<void> {\n    ExpressApp.initializeMiddleware();\n    ExpressApp.initializeRoutes();\n    ExpressApp.initializeSwaggerDocs();\n    ExpressApp.initializeGlobalMiddleware();\n  }\n\n  private static async initializeRoutes(): Promise<void> {\n    this.App.use(\"/health\", AppHelper.useAppHealthRoute);\n    // this.App.use(routes);\n  }\n\n  private static async initializeMiddleware(): Promise<void> {\n    this.App.use(express.urlencoded({ limit: \"6kb\", extended: true }));\n    this.App.use(express.json({ limit: \"6kb\" }));\n    this.App.use(morgan(\"combined\", { stream: { write: Log.http } }));\n    this.App.use(\"/public\", express.static(path.resolve(path.join(__dirname), \"src\", \"public\")));\n    this.App.use(\n      cors({\n        origin: \"*\",\n        methods: [\"GET\", \"HEAD\", \"PUT\", \"OPTIONS\", \"PATCH\", \"POST\", \"DELETE\"]\n      })\n    );\n    this.App.use(helmet({ contentSecurityPolicy: false }));\n    this.App.use(cookies());\n  }\n\n  private static async initializeSwaggerDocs(): Promise<void> {\n    if (!Config.isProduction()) {\n      new SwaggerApp(ExpressApp.App).initialize().catch(Log.error);\n      Log.info(\n        `Swagger docs available at http://localhost:${Config.get<number>(IConfigKey.PORT)} ðŸ“—`\n      );\n    }\n  }\n\n  private static async initializeGlobalMiddleware(): Promise<void> {\n    this.App.use(\"*\", AppHelper.useAppNotFoundRoute);\n    this.App.use(ApiErrorHelperMiddleware.useGlobalErrorMiddleware);\n  }\n}\n\nexport default ExpressApp;\n"],"mappings":"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","ignoreList":[]}